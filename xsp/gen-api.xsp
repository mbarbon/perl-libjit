# THIS FILE IS GENERATED BY author_tools/make_libjit_wrappers.pl
# DO NOT EDIT

%module{LibJIT};

%package{LibJIT::API};

#include "helpers.h"

LibJIT::Function jit_function_create(LibJIT::Context context, LibJIT::Type signature);
LibJIT::Function jit_function_create_nested(LibJIT::Context context, LibJIT::Type signature, LibJIT::Function parent);
void jit_function_abandon(LibJIT::Function func);
LibJIT::Context jit_function_get_context(LibJIT::Function func);
LibJIT::Type jit_function_get_signature(LibJIT::Function func);
# ignoring jit_function_set_meta
# ignoring jit_function_get_meta
# ignoring jit_function_free_meta
LibJIT::Function jit_function_next(LibJIT::Context context, LibJIT::Function prev);
LibJIT::Function jit_function_previous(LibJIT::Context context, LibJIT::Function prev);
LibJIT::Block jit_function_get_entry(LibJIT::Function func);
LibJIT::Block jit_function_get_current(LibJIT::Function func);
LibJIT::Function jit_function_get_nested_parent(LibJIT::Function func);
int jit_function_compile(LibJIT::Function func);
int jit_function_is_compiled(LibJIT::Function func);
void jit_function_set_recompilable(LibJIT::Function func);
void jit_function_clear_recompilable(LibJIT::Function func);
int jit_function_is_recompilable(LibJIT::Function func);
# ignoring jit_function_compile_entry
# ignoring jit_function_setup_entry
# ignoring jit_function_to_closure
# ignoring jit_function_from_closure
# ignoring jit_function_from_pc
# ignoring jit_function_to_vtable_pointer
# ignoring jit_function_from_vtable_pointer
# ignoring jit_function_set_on_demand_compiler
# ignoring jit_function_get_on_demand_compiler
# ignoring jit_function_apply
# ignoring jit_function_apply_vararg
void jit_function_set_optimization_level(LibJIT::Function func, unsigned int level);
unsigned int jit_function_get_optimization_level(LibJIT::Function func);
unsigned int jit_function_get_max_optimization_level(void);
LibJIT::Label jit_function_reserve_label(LibJIT::Function func);
int jit_function_labels_equal(LibJIT::Function func, LibJIT::Label label, LibJIT::Label label2);
int jit_insn_get_opcode(LibJIT::Insn insn);
LibJIT::Value jit_insn_get_dest(LibJIT::Insn insn);
LibJIT::Value jit_insn_get_value1(LibJIT::Insn insn);
LibJIT::Value jit_insn_get_value2(LibJIT::Insn insn);
LibJIT::Label jit_insn_get_label(LibJIT::Insn insn);
LibJIT::Function jit_insn_get_function(LibJIT::Insn insn);
# ignoring jit_insn_get_native
LibJIT::Type jit_insn_get_signature(LibJIT::Insn insn);
int jit_insn_dest_is_value(LibJIT::Insn insn);
# ignoring jit_insn_label
int jit_insn_new_block(LibJIT::Function func);
LibJIT::Value jit_insn_load(LibJIT::Function func, LibJIT::Value value);
LibJIT::Value jit_insn_dup(LibJIT::Function func, LibJIT::Value value);
LibJIT::Value jit_insn_load_small(LibJIT::Function func, LibJIT::Value value);
int jit_insn_store(LibJIT::Function func, LibJIT::Value dest, LibJIT::Value value);
LibJIT::Value jit_insn_load_relative(LibJIT::Function func, LibJIT::Value value, jit_nint offset, LibJIT::Type type);
int jit_insn_store_relative(LibJIT::Function func, LibJIT::Value dest, jit_nint offset, LibJIT::Value value);
LibJIT::Value jit_insn_add_relative(LibJIT::Function func, LibJIT::Value value, jit_nint offset);
LibJIT::Value jit_insn_load_elem(LibJIT::Function func, LibJIT::Value base_addr, LibJIT::Value index, LibJIT::Type elem_type);
LibJIT::Value jit_insn_load_elem_address(LibJIT::Function func, LibJIT::Value base_addr, LibJIT::Value index, LibJIT::Type elem_type);
int jit_insn_store_elem(LibJIT::Function func, LibJIT::Value base_addr, LibJIT::Value index, LibJIT::Value value);
int jit_insn_check_null(LibJIT::Function func, LibJIT::Value value);
LibJIT::Value jit_insn_add(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_add_ovf(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_sub(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_sub_ovf(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_mul(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_mul_ovf(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_div(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_rem(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_rem_ieee(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_neg(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_and(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_or(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_xor(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_not(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_shl(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_shr(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_ushr(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_sshr(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_eq(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_ne(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_lt(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_le(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_gt(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_ge(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_cmpl(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_cmpg(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_to_bool(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_to_not_bool(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_acos(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_asin(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_atan(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_atan2(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_ceil(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_cos(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_cosh(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_exp(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_floor(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_log(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_log10(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_pow(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_rint(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_round(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_sin(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_sinh(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_sqrt(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_tan(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_tanh(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_trunc(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_is_nan(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_is_finite(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_is_inf(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_abs(LibJIT::Function func, LibJIT::Value value1);
LibJIT::Value jit_insn_min(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_max(LibJIT::Function func, LibJIT::Value value1, LibJIT::Value value2);
LibJIT::Value jit_insn_sign(LibJIT::Function func, LibJIT::Value value1);
# ignoring jit_insn_branch
# ignoring jit_insn_branch_if
# ignoring jit_insn_branch_if_not
# ignoring jit_insn_jump_table
LibJIT::Value jit_insn_address_of(LibJIT::Function func, LibJIT::Value value1);
# ignoring jit_insn_address_of_label
LibJIT::Value jit_insn_convert(LibJIT::Function func, LibJIT::Value value, LibJIT::Type type, int overflow_check);
# ignoring jit_insn_call
# ignoring jit_insn_call_indirect
# ignoring jit_insn_call_indirect_vtable
# ignoring jit_insn_call_native
# ignoring jit_insn_call_intrinsic
int jit_insn_incoming_reg(LibJIT::Function func, LibJIT::Value value, int reg);
int jit_insn_incoming_frame_posn(LibJIT::Function func, LibJIT::Value value, jit_nint frame_offset);
int jit_insn_outgoing_reg(LibJIT::Function func, LibJIT::Value value, int reg);
int jit_insn_outgoing_frame_posn(LibJIT::Function func, LibJIT::Value value, jit_nint frame_offset);
int jit_insn_return_reg(LibJIT::Function func, LibJIT::Value value, int reg);
int jit_insn_setup_for_nested(LibJIT::Function func, int nested_level, int reg);
int jit_insn_flush_struct(LibJIT::Function func, LibJIT::Value value);
LibJIT::Value jit_insn_import(LibJIT::Function func, LibJIT::Value value);
int jit_insn_push(LibJIT::Function func, LibJIT::Value value);
int jit_insn_push_ptr(LibJIT::Function func, LibJIT::Value value, LibJIT::Type type);
int jit_insn_set_param(LibJIT::Function func, LibJIT::Value value, jit_nint offset);
int jit_insn_set_param_ptr(LibJIT::Function func, LibJIT::Value value, LibJIT::Type type, jit_nint offset);
int jit_insn_push_return_area_ptr(LibJIT::Function func);
int jit_insn_pop_stack(LibJIT::Function func, jit_nint num_items);
int jit_insn_defer_pop_stack(LibJIT::Function func, jit_nint num_items);
int jit_insn_flush_defer_pop(LibJIT::Function func, jit_nint num_items);
int jit_insn_return(LibJIT::Function func, LibJIT::Value value);
int jit_insn_return_ptr(LibJIT::Function func, LibJIT::Value value, LibJIT::Type type);
int jit_insn_default_return(LibJIT::Function func);
int jit_insn_throw(LibJIT::Function func, LibJIT::Value value);
LibJIT::Value jit_insn_get_call_stack(LibJIT::Function func);
LibJIT::Value jit_insn_thrown_exception(LibJIT::Function func);
int jit_insn_uses_catcher(LibJIT::Function func);
LibJIT::Value jit_insn_start_catcher(LibJIT::Function func);
# ignoring jit_insn_branch_if_pc_not_in_range
int jit_insn_rethrow_unhandled(LibJIT::Function func);
# ignoring jit_insn_start_finally
int jit_insn_return_from_finally(LibJIT::Function func);
# ignoring jit_insn_call_finally
# ignoring jit_insn_start_filter
int jit_insn_return_from_filter(LibJIT::Function func, LibJIT::Value value);
# ignoring jit_insn_call_filter
int jit_insn_memcpy(LibJIT::Function func, LibJIT::Value dest, LibJIT::Value src, LibJIT::Value size);
int jit_insn_memmove(LibJIT::Function func, LibJIT::Value dest, LibJIT::Value src, LibJIT::Value size);
int jit_insn_memset(LibJIT::Function func, LibJIT::Value dest, LibJIT::Value value, LibJIT::Value size);
LibJIT::Value jit_insn_alloca(LibJIT::Function func, LibJIT::Value size);
int jit_insn_move_blocks_to_end(LibJIT::Function func, LibJIT::Label from_label, LibJIT::Label to_label);
int jit_insn_move_blocks_to_start(LibJIT::Function func, LibJIT::Label from_label, LibJIT::Label to_label);
int jit_insn_mark_offset(LibJIT::Function func, jit_int offset);
int jit_insn_mark_breakpoint(LibJIT::Function func, jit_nint data1, jit_nint data2);
int jit_insn_mark_breakpoint_variable(LibJIT::Function func, LibJIT::Value data1, LibJIT::Value data2);
# ignoring jit_insn_iter_init
# ignoring jit_insn_iter_init_last
# ignoring jit_insn_iter_next
# ignoring jit_insn_iter_previous
LibJIT::Type jit_type_copy(LibJIT::Type type);
void jit_type_free(LibJIT::Type type);
# ignoring jit_type_create_struct
# ignoring jit_type_create_union
# ignoring jit_type_create_signature
LibJIT::Type jit_type_create_pointer(LibJIT::Type type, int incref);
# ignoring jit_type_create_tagged
# ignoring jit_type_set_names
void jit_type_set_size_and_alignment(LibJIT::Type type, jit_nint size, jit_nint alignment);
void jit_type_set_offset(LibJIT::Type type, unsigned int field_index, jit_nuint offset);
int jit_type_get_kind(LibJIT::Type type);
jit_nuint jit_type_get_size(LibJIT::Type type);
jit_nuint jit_type_get_alignment(LibJIT::Type type);
unsigned int jit_type_num_fields(LibJIT::Type type);
LibJIT::Type jit_type_get_field(LibJIT::Type type, unsigned int field_index);
jit_nuint jit_type_get_offset(LibJIT::Type type, unsigned int field_index);
unsigned int jit_type_find_name(LibJIT::Type type, const char *name);
unsigned int jit_type_num_params(LibJIT::Type type);
LibJIT::Type jit_type_get_return(LibJIT::Type type);
LibJIT::Type jit_type_get_param(LibJIT::Type type, unsigned int param_index);
jit_abi_t jit_type_get_abi(LibJIT::Type type);
LibJIT::Type jit_type_get_ref(LibJIT::Type type);
LibJIT::Type jit_type_get_tagged_type(LibJIT::Type type);
void jit_type_set_tagged_type(LibJIT::Type type, LibJIT::Type underlying, int incref);
int jit_type_get_tagged_kind(LibJIT::Type type);
# ignoring jit_type_get_tagged_data
# ignoring jit_type_set_tagged_data
int jit_type_is_primitive(LibJIT::Type type);
int jit_type_is_struct(LibJIT::Type type);
int jit_type_is_union(LibJIT::Type type);
int jit_type_is_signature(LibJIT::Type type);
int jit_type_is_pointer(LibJIT::Type type);
int jit_type_is_tagged(LibJIT::Type type);
jit_nuint jit_type_best_alignment(void);
LibJIT::Type jit_type_normalize(LibJIT::Type type);
LibJIT::Type jit_type_remove_tags(LibJIT::Type type);
LibJIT::Type jit_type_promote_int(LibJIT::Type type);
int jit_type_return_via_pointer(LibJIT::Type type);
int jit_type_has_tag(LibJIT::Type type, int kind);
LibJIT::Value jit_value_create(LibJIT::Function func, LibJIT::Type type);
LibJIT::Value jit_value_create_nint_constant(LibJIT::Function func, LibJIT::Type type, jit_nint const_value);
LibJIT::Value jit_value_create_long_constant(LibJIT::Function func, LibJIT::Type type, jit_long const_value);
LibJIT::Value jit_value_create_float32_constant(LibJIT::Function func, LibJIT::Type type, jit_float32 const_value);
LibJIT::Value jit_value_create_float64_constant(LibJIT::Function func, LibJIT::Type type, jit_float64 const_value);
LibJIT::Value jit_value_create_nfloat_constant(LibJIT::Function func, LibJIT::Type type, jit_nfloat const_value);
# ignoring jit_value_create_constant
LibJIT::Value jit_value_get_param(LibJIT::Function func, unsigned int param);
LibJIT::Value jit_value_get_struct_pointer(LibJIT::Function func);
int jit_value_is_temporary(LibJIT::Value value);
int jit_value_is_local(LibJIT::Value value);
int jit_value_is_constant(LibJIT::Value value);
int jit_value_is_parameter(LibJIT::Value value);
void jit_value_ref(LibJIT::Function func, LibJIT::Value value);
void jit_value_set_volatile(LibJIT::Value value);
int jit_value_is_volatile(LibJIT::Value value);
void jit_value_set_addressable(LibJIT::Value value);
int jit_value_is_addressable(LibJIT::Value value);
LibJIT::Type jit_value_get_type(LibJIT::Value value);
LibJIT::Function jit_value_get_function(LibJIT::Value value);
LibJIT::Block jit_value_get_block(LibJIT::Value value);
LibJIT::Context jit_value_get_context(LibJIT::Value value);
# ignoring jit_value_get_constant
jit_nint jit_value_get_nint_constant(LibJIT::Value value);
jit_long jit_value_get_long_constant(LibJIT::Value value);
jit_float32 jit_value_get_float32_constant(LibJIT::Value value);
jit_float64 jit_value_get_float64_constant(LibJIT::Value value);
jit_nfloat jit_value_get_nfloat_constant(LibJIT::Value value);
int jit_value_is_true(LibJIT::Value value);
# ignoring jit_constant_convert
